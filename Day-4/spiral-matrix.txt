class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int n=matrix.size();
        int m=matrix[0].size();

        vector<int> ans;

        int t=0;
        int i=0;
        int j=0;
        int a=0,b=1;
        while(t<m*n){
            cout<<"i"<<i;
            cout<<"j"<<j;
            ans.push_back(matrix[i][j]);
            matrix[i][j]=101;
            if((a==0 && b==1) && (j==m-1 || matrix[i][j+1]>100)){
                a=1;
                b=0;
            }
            if((a==1 && b==0) && (i==n-1 || matrix[i+1][j]>100)){
                a=0;
                b=-1;
            }
            if((a==0 && b==-1) && (j==0 || matrix[i][j-1]>100)){
                a=-1;
                b=0;
            }
            if((a==-1 && b==0) && (i==0 || matrix[i-1][j]>100)){
                a=0;
                b=1;
            }
            
            i+=a;
            j+=b;
            t++;
        }
        return ans;
    }
};
